bothからconfirmに飛んでも、confirmからのback buttonがnewに飛んでしまっているから
それを変更する必要がある
→done

expenseの並び順はdateの次にcreated_atでも並び変えられるように
→同じ日だと順番が違ってくる
→done

出費を編集・削除できるように
→aloneはできたbothができているか確認。そのあとは、delete

partners_controllerのcheck_existance
→done
user#showでpartnerがnilだとエラーになるからif文でエラーがでないように→done

カテゴリの編集・削除
次はcategory#edit　編集・削除・はずすを選択できるように

category#index
  自分の全てのカテゴリを表示(編集のリンク)
  共通のカテゴリに登録しているパートナーのカテゴリ一覧(共通カテゴリの解除のリンク)
  共通のカテゴリを登録のリンク
  新しいカテゴリを追加のリンク

共通のカテゴリを登録
  今の共通のカテゴリを選ぶ画面と同じ
  indexに戻るボタン

編集ページ(new or edit)
  new　新しいカテゴリを追加
    フォーム
    チェックボックス　パートナーと共通のカテゴリにする
    indexに戻るボタン
    →ここまで終わった
  edit カテゴリを編集
    フォームでカテゴリ名の編集
    削除リンク

削除 or 共通カテゴリの解除ページ
  代わりのカテゴリを選ぶ
  新しいカテゴリを追加リンク
ここは保留

■前後月ボタン
.month_ago() .month_since()とかでできそう
引数を変数にして、ajaxで足したり引いたりすればできるかも

1.routingに追加
  pastとfutureをgetメソッドで


2. expenses#indexのviewを前月のリンクと来月のリンクを追加
リンクに以下のように変数を仕込んでおく。
  前月へ(x) 来月へ(y)
  デフォルトはx = 1, y=1


3.controllerのpast/futureアクションでparamsからの変数をつかって、month_ago()メソッドなどで１ヶ月前などのデータを取得する。
controllerにベタ打ちのほうが簡単だけど、名前付きスコープに引数を渡すやり方でできそう。
ただ、スコープに変数を渡すのではなく、スコープに入れる前の変数定義にviewからのパラメーターを渡せればできそう。
    end_of_month = Date.today.end_of_month
    beginning_of_month = Date.today.beginning_of_month
    scope :past_month, -> {where('date >= ? AND date <= ?', beginning_of_month, end_of_month)}
    ここの、
    beginning_of_month = Date.today.beginning_of_month
    ↓
    beginning_of_past_month = Date.today.month_ago(x).beginning_of_month　　とか

    でもどうやったら、modelの変数定義に変数を渡せるかわからないので、まずはベタ打ちで良さそう。
→とりあえずできた。


■手渡し料金
二人の出費の内、
  手渡し料金 = 自分が払ったお金 - 相手が払ったお金のうち自分が払わなければいけないお金 - 今までに手渡したお金
  current_user_expenses.both_t.sum(:amount) - partner_expenses_of_both.both_t.sum(:parnerpay) -

今月の払わなければいけない手渡し料金のロジックをつくった。確認が必要


カテゴリの編集・削除→前後月ボタン→手渡し料金→フロント

コントローラーの計算式は全部modelに書いて、コントローラーからはメソッドとして呼び出す。
